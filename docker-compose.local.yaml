services:
  medical-history-service:
    build:
      context: .
      dockerfile: local.Dockerfile
    container_name: saludtechalpes-medical-history-local-service
    restart: always
    volumes:
      - ".:/app"
    ports:
      - "3002:3002"
    env_file:
      - .env.local
    tty: true
    depends_on:
      db:
        condition: service_started
    networks:
      - db_net

  db:
    image: postgres:14
    container_name: postgres-local-db
    restart: always
    env_file:
      - .env.db
    networks:
      - db_net
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
  
  zookeeper:
    image: apachepulsar/pulsar:latest
    container_name: zookeeper
    restart: on-failure
    networks:
      - pulsar
    volumes:
      - ./data/zookeeper:/pulsar/data/zookeeper
    environment:
      - metadataStoreUrl=zk:zookeeper:2181
    command: >
      bash -c "bin/apply-config-from-env.py conf/zookeeper.conf && \
               bin/generate-zookeeper-config.sh conf/zookeeper.conf && \
               exec bin/pulsar zookeeper"
    healthcheck:
      test: ["CMD", "bin/pulsar-zookeeper-ruok.sh"]
      interval: 10s
      timeout: 5s
      retries: 30
  
  pulsar-init:
    container_name: pulsar-init
    hostname: pulsar-init
    image: apachepulsar/pulsar:latest
    networks:
      - pulsar
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        /pulsar/bin/pulsar initialize-cluster-metadata \
          --cluster cluster-a \
          --zookeeper zookeeper:2181 \
          --configuration-store zookeeper:2181 \
          --web-service-url http://broker:8080 \
          --broker-service-url pulsar://broker:6650
    depends_on:
      zookeeper:
        condition: service_healthy
  bookie:
    image: apachepulsar/pulsar:latest
    container_name: bookie
    restart: on-failure
    networks:
      - pulsar
    environment:
      - clusterName=cluster-a
      - zkServers=zookeeper:2181
      - metadataServiceUri=metadata-store:zk:zookeeper:2181
    depends_on:
      zookeeper:
        condition: service_healthy
      pulsar-init:
        condition: service_completed_successfully
    volumes:
      - ./data/bookkeeper:/pulsar/data/bookkeeper
    command: >
      bash -c "bin/apply-config-from-env.py conf/bookkeeper.conf && exec bin/pulsar bookie"

networks:
  db_net:
    driver: bridge
  pulsar:
    driver: bridge

volumes:
  db-data:
    driver: local